<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.cnamts.s8h</groupId>
	<artifactId>s8h-parent</artifactId>
	<version>2.0.3</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>
	<properties>
		<!-- Données de l'application -->
		<appli.name>S8_H</appli.name>
		<!-- Encoding -->
		<project.encoding>UTF-8</project.encoding>
		<project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>
		<sourceEncoding>${project.encoding}</sourceEncoding>
		<java.version>1.8</java.version>
		<!-- Git -->
		<scm-plugin-version>1.9</scm-plugin-version>
		<scm-git-plugin-version>1.8.1</scm-git-plugin-version>
		<!-- Javadoc -->
		<additionalparam>-Xdoclint:none</additionalparam>
		<!-- Version -->
		<caster.version>1.1.6</caster.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.3</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>2.4</version>
			</dependency>
			<!-- ***** -->
			<!-- Swagger -->
			<!-- ***** -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.6.1</version>
			</dependency>
			<!-- *********** -->
			<!-- Utilitaires -->
			<!-- *********** -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>4.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.10</version>
			</dependency>
			<!-- **************** -->
			<!-- Librairie CASTER -->
			<!-- **************** -->
			<dependency>
				<groupId>fr.cnamts.jk</groupId>
				<artifactId>jk-socle-caster</artifactId>
				<version>${caster.version}</version>
			</dependency>
			<!-- ***** -->
			<!-- Tests -->
			<!-- ***** -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.2.29</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.3.0</version>
				<scope>test</scope>
			</dependency>
			
		<!-- *************-->
        <!-- loggingTests -->
        <!-- ************* -->
	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-slf4j-impl</artifactId>
	        <version>2.12.0</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-api</artifactId>
	        <version>2.11.2</version>
	        <scope>test</scope>
	    </dependency>
	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-core</artifactId>
	        <version>2.11.2</version>
	        <scope>test</scope>
	    </dependency>
		
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- ******* -->
		<!-- Logging -->
		<!-- ******* -->
		<!-- <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-api</artifactId> 
			<version>2.11.1</version> </dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> 
			<artifactId>log4j-core</artifactId> <version>2.11.1</version> </dependency> 
			<dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-jcl</artifactId> 
			<version>2.11.1</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-slf4j-impl</artifactId> 
			<version>2.11.1</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-jul</artifactId> 
			<version>2.11.1</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-1.2-api</artifactId> 
			<version>2.11.1</version> </dependency> -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.22</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>C:/Utilitaire_seb/AutAppConfiguration/</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!-- Compilation JAVA -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<useIncrementalCompilation>false</useIncrementalCompilation>
					</configuration>
				</plugin>
				<!-- Publication des sources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<!-- Gestion des resources : copie de fichiers, ... -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>jasper</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<configuration>
						<destDir>${project.build.directory}/javadoc</destDir>
					</configuration>
				</plugin>
				<!-- Créer des assembly : tar.gz, zip, jar, ... -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<!-- Génération de la documentation Swagger (documentation des API REST) -->
				<plugin>
					<groupId>com.github.kongchen</groupId>
					<artifactId>swagger-maven-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<!-- Plugin pour exécuter les tests unitaires **/Test*, **/*Test, **/*TestCase -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<!-- ${surefireArgLine} permet de récupérer les propriétés settée par 
							le jacoco plugin (agent java) -->
						<argLine>-Duser.language=fr -Duser.region=FR -Duser.country=FR
							-Duser.variant=FR
							${surefireArgLine}</argLine>
						<runOrder>alphabetical</runOrder>
					</configuration>
				</plugin>
				<!-- Plugin pour exécuter les tests d'intégration : **/IT*.java, **/*IT.java, 
					**/*ITCase.java Il est possible de lancer les tests avec la commande <code>mvn 
					maven-failsafe-plugin:integration-test"</code> -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<argLine>-Duser.language=fr -Duser.region=FR -Duser.country=FR
							-Duser.variant=FR</argLine>
					</configuration>
				</plugin>
				<!-- qualité de code -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>
				<!-- Couverture de code -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.4.201502262128</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>1.3.6</version>
				<configuration>
					<mavenSettingsProxyId>mainProxy</mavenSettingsProxyId>
					<format>xml</format>
				</configuration>
			</plugin>
			<!-- Source Code Management GIT provider -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${scm-plugin-version}</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>${scm-git-plugin-version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-api</artifactId>
						<version>${scm-plugin-version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Release plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<tagNameFormat>${releaseVersion}</tagNameFormat>
					<!-- Ne pas ajouter automatiquement le profil release-profile qui publie 
						en double la javadoc et les sources -->
					<useReleaseProfile>false</useReleaseProfile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>${scm-git-plugin-version}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-api</artifactId>
						<version>${scm-plugin-version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.build.directory}/coverage-reports/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>se.natusoft.tools.doc.markdowndoc</groupId> <artifactId>markdowndoc-maven-plugin</artifactId> 
				<version>n.n[.n]</version> <executions> <execution> <id>generate-docs</id> 
				<goals> <goal>doc</goal> </goals> <phase>install</phase> <configuration> 
				<generatorOptions> <generator>pdf</generator> <inputPaths> C:\Users\VAIE-30289\Desktop\perso\git\s8h\s8h\doc\*.md 
				</inputPaths> </generatorOptions> <pdfGeneratorOptions> <resultFile> C:\Users\VAIE-30289\Desktop\perso\git\s8h\s8h\doc\doc.pdf 
				</resultFile> </pdfGeneratorOptions> </configuration> </execution> </executions> 
				</plugin> -->
		</plugins>
	</build>
</project>
